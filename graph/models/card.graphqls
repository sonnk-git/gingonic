type Card {
    id: ID!
    terminology: String
    definition: String
    courseId: ID!
}

input NewCardInput {
    courseId: String!
    terminology: String
    definition: String
}

input NewCardInputFromText {
    name: String!
    description: String
    text: String!
}

input CardInput {
    id: ID!
    terminology: String
    definition: String
}

input GetCardsInput {
    courseID: String
    pagination: PaginationInput
    #    Todo: maybe need filter: by id, by type, sort by, etc.
}

type GetCardsResponse {
    data: [Card]!
    pageInfo: PageInfo
}

extend type Query {
    getCards(CourseID: String): [Card]! @authenticated
    getCard(ID: String!): Card @authenticated
    getCardsWithCursor(input: GetCardsInput): GetCardsResponse! @authenticated
}

extend type Mutation {
    createCard(input: NewCardInput!): Card! @authenticated
    editCard(input: CardInput!): Card! @authenticated
    deleteCard(ID: String!): Boolean! @authenticated
    createCardsFromText(input: NewCardInputFromText): [Card]! @authenticated
}
